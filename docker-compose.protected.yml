version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: socialmedia
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      # Primary data volume - NEVER delete this
      - postgres_data:/var/lib/postgresql/data
      # Backup volume for additional protection
      - postgres_backup:/var/lib/postgresql/backup
      # Migration scripts
      - ./server/migrations:/docker-entrypoint-initdb.d:ro
      # Protection system integration
      - ./data_protection:/data_protection:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "data-protection.enabled=true"
      - "data-protection.backup-schedule=daily"
      - "data-protection.critical=true"
    networks:
      - social_media_network

  backend:
    build: ./server
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: socialmedia
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-postgres}@postgres:5432/socialmedia?sslmode=disable
      SESSION_SECRET: ${SESSION_SECRET:-your-secret-key-here}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-here}
      # Data protection hooks
      PRE_START_HOOK: "/app/pre-deploy-hook.sh"
      POST_START_HOOK: "/app/post-deploy-hook.sh"
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./server/uploads:/app/uploads
      - ./client/build:/app/client/build
      # Mount protection hooks
      - ./pre-deploy-hook.sh:/app/pre-deploy-hook.sh:ro
      - ./post-deploy-hook.sh:/app/post-deploy-hook.sh:ro
      - ./data-protection-system.sh:/app/data-protection-system.sh:ro
    labels:
      - "data-protection.requires-verification=true"
    networks:
      - social_media_network

  frontend:
    build: ./client
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - social_media_network

  # Data protection service
  data-protector:
    image: postgres:15-alpine
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: socialmedia
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/source_data:ro
      - postgres_backup:/backup_data
      - ./data_protection:/data_protection
      - ./data-protection-system.sh:/scripts/data-protection-system.sh:ro
    command: >
      sh -c "
        echo 'Data Protection Service Started' &&
        while true; do
          sleep 3600
          echo 'Running hourly data protection check...'
          /scripts/data-protection-system.sh post_deployment_verification || echo 'Protection check completed with warnings'
        done
      "
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "data-protection.service=true"
    networks:
      - social_media_network

volumes:
  postgres_data:
    driver: local
    labels:
      - "data-protection.critical=true"
      - "data-protection.never-delete=true"
  postgres_backup:
    driver: local
    labels:
      - "data-protection.backup=true"

networks:
  social_media_network:
    driver: bridge
    labels:
      - "data-protection.network=true"